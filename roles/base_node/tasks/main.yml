---
# install NFS server
- name: install nfs-kernel-server
  ansible.builtin.apt:
    name: nfs-kernel-server
    state: present
    update_cache: yes
  become: true

# create export directory for NFS
- name: create NFS export directory
  ansible.builtin.file:
    path: /mnt/raid/nfs_share
    state: directory
    mode: '0777'

# configure NFS export
- name: configure /etc/exports for NFS share
  ansible.builtin.lineinfile:
    path: /etc/exports
    line: "/mnt/raid/nfs_share {{ vlan_infra }}.0/24(rw,sync,no_subtree_check,no_root_squash)"
    create: yes
    state: present
  notify: export nfs share

# enable and start NFS server
- name: enable and start nfs-server
  ansible.builtin.systemd_service:
    name: nfs-server
    enabled: true
    state: started

# create directory for bindmount folders
- name: create directory bindmounts
  ansible.builtin.file:
    path: /data/bindmounts
    state: directory
    mode: '0755'

# create directories for bindmount
- name: create bindmount directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /data/bindmounts/gitlab
    - /data/bindmounts/promtail
    - /data/bindmounts/registry
    - /data/bindmounts/traefik

# create directory for bindmount folders
- name: create directory bindmounts
  ansible.builtin.file:
    path: /data/bindmounts/gitlab/runner
    state: directory
    mode: '0755'

# create subdirectories
- name: create bindmount subdirectories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /data/bindmounts/gitlab/runner/glrun01
    - /data/bindmounts/gitlab/runner/glrun02
    - /data/bindmounts/gitlab/runner/glrun03
    - /data/bindmounts/gitlab/runner/glrun10
    - /data/bindmounts/registry/auth

# copy glrun01 config
- name: copy config for glrun01
  ansible.builtin.template:
    src: glr01_config.toml.j2
    dest: /data/bindmounts/gitlab/runner/glrun01/glr01_config.toml

# copy glrun02 config
- name: copy config for glrun01
  ansible.builtin.template:
    src: glr02_config.toml.j2
    dest: /data/bindmounts/gitlab/runner/glrun02/glr02_config.toml

# copy glrun03 config
- name: copy config for glrun01
  ansible.builtin.template:
    src: glr03_config.toml.j2
    dest: /data/bindmounts/gitlab/runner/glrun03/glr03_config.toml

# copy glrun10 config
- name: copy config for glrun01
  ansible.builtin.template:
    src: glr10_config.toml.j2
    dest: /data/bindmounts/gitlab/runner/glrun10/glr10_config.toml

# copy registry auth
- name: copy auth config registry
  ansible.builtin.template:
    src: htpasswd.j2
    dest: /data/bindmounts/registry/auth/htpasswd

# copy promtail config
- name: copy config for promtail
  ansible.builtin.template:
    src: config.yml.j2
    dest: /data/bindmounts/promtail/config.yml

# copy traefik config
- name: copy config for traefik
  ansible.builtin.template:
    src: dynamic_conf.yml.j2
    dest: /data/bindmounts/traefik/dynamic_conf.yml

# copy docker-compose.yml
- name: copy docker-compose.yml
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: /home/user/docker-compose.yml

# create .env from variable
- name: create .env file
  ansible.builtin.copy:
    dest: /home/user/.env
    content: "{{ lookup('env', 'DOCKER_ENV') }}"

# run docker container
- name: start containers
  ansible.builtin.command: docker compose up -d --remove-orphans
...
